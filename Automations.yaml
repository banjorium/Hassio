- id: The sun has set
  trigger:
    platform: sun
    event: sunset
  action:
    service: notify.sms
    data:
      message: The sun has set
      target:
      - '+16033181236'
- id: Living Room Harmony
  initial_state: 'on'
  hide_entity: false
  trigger:
    platform: state
    entity_id: input_select.harmony1
    from: Select Input
  action:
  - service: remote.turn_on
    entity_id: remote.living_room_harmony
    data_template:
      activity: '{% if is_state("input_select.harmony1", "TV") %} 31003729 {% elif
        is_state("input_select.harmony1", "PS4") %} 31004539 {% else %} {% endif %}

        '
  - service: input_select.select_option
    entity_id: input_select.harmony1
    data_template:
      option: Select Input
- id: Living Room Harmony Off
  hide_entity: false
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.harmony1
    to: Power Off
  action:
  - service: remote.turn_off
    entity_id: remote.living_room_harmony
  - service: input_select.select_option
    entity_id: input_select.harmony1
    data_template:
      option: Select Input
      
- id: startup
  initial_state: 'on'
  trigger:
    platform: homeassistant
    event: start
  action:
    - delay: '00:00:30'
    - service: cloud.remote_connect
    
- id: Master Bedroom Harmony
  initial_state: 'on'
  hide_entity: false
  trigger:
    platform: state
    entity_id: input_select.harmony2
    from: Select Input
  action:
  - service: remote.turn_on
    entity_id: remote.bedroom_harmony
    data_template:
      activity: '{% if is_state("input_select.harmony2", "TV") %} 34961530 {% else
        %} {% endif %}

        '
  - service: input_select.select_option
    entity_id: input_select.harmony2
    data_template:
      option: Select Input
- id: Master Bedroom Harmony Off
  hide_entity: false
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: input_select.harmony2
    to: Power Off
  action:
  - service: remote.turn_off
    entity_id: remote.bedroom_harmony
  - service: input_select.select_option
    entity_id: input_select.harmony2
    data_template:
      option: Select Input
- id: Daily snapshot at 2 AM
  initial_state: 'on'
  trigger:
    platform: time
    at: 02:00:00
  action:
  - service: hassio.snapshot_full
    data:
      name: automated backup {{ now().strftime('%Y-%m-%d') }}
- id: Daily upload to dropbox at 8AM
  initial_state: 'on'
  trigger:
    platform: time
    at: 08:00:00
  action:
  - service: hassio.addon_stdin
    data:
      addon: 7be23ff5_dropbox_sync
      input:
        command: upload
- id: Entry Light on with Motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.front_door_motion
  condition:
  - condition: sun
    after: sunset
    before_offset: '1:00:00'
  - condition: state
    entity_id: light.entry
    state: 'off'
  action:
  - service: light.turn_on
    entity_id: light.entry
  - delay: 00:05:00
  - service: light.turn_off
    entity_id: light.entry
- id: VR Switches on with Motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_11_motion
  action:
  - service: switch.turn_on
    entity_id:
    - group.vr_switches
- id: VR Lights on with Motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_11_motion
  action:
  - service: light.turn_on
    entity_id:
    - group.den_lights
- id: VR_Lights_No_Motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_11_motion
    to: 'off'
    for:
      minutes: '2'
  condition:
  - condition: state
    entity_id: light.hue_color_lamp_1_2
    state: 'on'
  action:
    service: light.turn_off
    entity_id:
    - group.den_lights
- id: VR_Switches_No_Motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.motion_sensor_11_motion
    to: 'off'
    for:
      minutes: '2'
  action:
    service: switch.turn_off
    entity_id:
    - group.vr_switches
- id: Turn on Entry Lights - Jor Home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.jor_home
    to: 'True'
  condition:
  - condition: sun
    after: sunset
    before_offset: '1:30:00'
  - condition: state
    entity_id: light.entry
    state: 'off'
  action:
  - service: light.turn_on
    entity_id: light.entry
  - delay: 00:15:00
  - service: light.turn_off
    entity_id: light.entry
- id: Turn on Entry Lights - Cella Home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.cella_home
    to: 'True'
  condition:
  - condition: sun
    after: sunset
    before_offset: '1:30:00'
  - condition: state
    entity_id: light.entry
    state: 'off'
  action:
  - service: light.turn_on
    entity_id: light.entry
  - delay: 00:10:00
  - service: light.turn_off
    entity_id: light.entry
- id: Sunroom Door Opens - Turn on Lights
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.sunroom_slider_opened
    to: 'on'
    from: 'off'
  condition:
  - condition: sun
    after: sunset
    before_offset: '1:00:00'
  - condition: state
    entity_id: light.entry
    state: 'off'
  action:
    service: light.turn_on
    entity_id:
    - light.sunroom_lamp
- id: Garage_Open_Alert
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: cover.garage_left
    to: open
    for:
      minutes: '10'
  action:
    service: notify.informational
    data:
      message: The left garage door has been open for 10 minutes
- id: Garage_Open_Close
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: cover.garage_left
    to: open
    from: closed
    for:
      minutes: '10'
  condition:
  - condition: state
    entity_id: binary_sensor.garage_motion_motion
    state: 'off'
  action:
    service: cover.close_cover
    entity_id: cover.garage_left
- id: Garage State Notification
  trigger:
    platform: state
    entity_id: cover.garage_left
  action:
  - service: media_player.alexa_tts
    data_template:
      message: 'The {{ trigger.to_state.attributes.friendly_name }} is: {{ trigger.to_state.state
        }}'
      entity: media_player.kitchen_echo
- id: Cella_Arrival_Announce
  trigger:
    platform: zone
    entity_id: device_tracker.ce0717174b4ca8900c7e
    event: enter
    zone: zone.home
  action:
  - service: script.turn_on
    entity_id: script.call_cella_arrival_announce_s
- id: Jor_Arrival_Announce
  trigger:
    platform: zone
    entity_id: device_tracker.ce071717cb2aaf3a047e
    event: enter
    zone: zone.home
  action:
  - service: script.turn_on
    entity_id: script.call_jor_arrival_announce
- id: Garage_Open_Close_no_motion_trigger
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_motion_motion
    to: 'off'
    for:
      minutes: '8'
  condition:
  - condition: state
    entity_id: cover.garage_left
    state: open
  action:
    service: cover.close_cover
    entity_id: cover.garage_left
- id: Garage_Lights_No_Motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_motion_motion
    to: 'off'
    for:
      minutes: '8'
  condition:
  - condition: state
    entity_id: switch.garage_lights
    state: 'on'
  action:
    service: switch.turn_off
    entity_id: switch.garage_lights
- id: jor_leaving_elm_st
  trigger:
    platform: zone
    entity_id: device_tracker.ce071717cb2aaf3a047e
    event: leave
    zone: zone.elm_st
  action:
    service: ifttt.trigger
    data:
      event: Jor_Leaving_Elm_St
      value1: Hello World
- id: jor_arriving_millyard
  trigger:
    platform: zone
    entity_id: device_tracker.ce071717cb2aaf3a047e
    event: enter
    zone: zone.millyard
  action:
    service: ifttt.trigger
    data:
      event: jor_arriving_millyard
      value1: Hello World
- id: cella_leaving_millyard
  trigger:
    platform: zone
    entity_id: device_tracker.ce0717174b4ca8900c7e
    event: leave
    zone: zone.millyard
  action:
    service: ifttt.trigger
    data:
      event: cella_leaving_millyard
      value1: Hello World
- id: Motion Kitchen - Turn on Lights - Daytime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 05:30:00
    before: '20:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: switch.turn_on
    entity_id: switch.kitchen_lights
- id: Motion Kitchen - Turn on Lights - Daytime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 05:30:00
    before: '20:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.counter_right
    - light.kitchenrefrigerator
    data:
      brightness: 254
      kelvin: 5000
- id: Motion Kitchen - Turn on Lights - Late Night Time
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '23:59:59'
    before: 05:29:59
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.counter_right
    - light.kitchenrefrigerator
    data:
      brightness: 150
      rgb_color:
      - 255
      - 0
      - 0
      kelvin: 2600
- id: Motion Kitchen - Turn on Lights - Mid-Night Time
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '21:00:00'
    before: '23:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.counter_right
    - light.kitchenrefrigerator
    data:
      brightness: 150
      kelvin: 3500
- id: Motion Detection - Kitchen Light off - Switch
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_motion
    to: 'off'
    for: 00:03:00
  action:
  - service: switch.turn_off
    entity_id: switch.kitchen_lights
- id: Motion Detection - Kitchen Light off - Counter
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_motion
    to: 'off'
    for: 00:03:00
  action:
  - service: homeassistant.turn_off
    entity_id:
    - light.counter_right
    - light.bar
    - light.kitchenrefrigerator
- id: NO Motion Detection - Kitchen Light on - Counter
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_motion
    to: 'off'
    for: 00:03:02
  condition:
  - condition: time
    after: '17:00:00'
    before: '23:59:59'
  action:
  - service: homeassistant.turn_on
    entity_id:
    - light.counter_right
    - light.kitchenrefrigerator
    data:
      brightness: 200
      effect: random
- id: Basement Door Opens - Turn on Lights
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.basement_door_opened
    to: 'on'
    from: 'off'
  action:
    service: light.turn_on
    entity_id:
    - light.basement_landing
    - light.gym
    - light.hydro_light
    - light.workshop_light
    - light.drums
- id: Basement Door Opens - Turn on Switches
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.basement_door_opened
    to: 'on'
    from: 'off'
  action:
    service: switch.turn_on
    entity_id:
    - switch.workbench
    - switch.filter
    - switch.craft
- id: Motion Downstairs - Turn off with no motion and door closed
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_2_motion
    to: 'off'
    for: 00:10:00
  condition:
  - condition: state
    entity_id: binary_sensor.basement_door_opened
    state: 'off'
  action:
  - service: homeassistant.turn_off
    entity_id: group.downstairs_auto
- id: Mudroom Motion - Turn on Lights - Day Time
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.motion_sensor_3_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 05:30:00
    before: '23:00:00'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
    service: light.turn_on
    entity_id: light.laundry_light
    data:
      brightness: 254
- id: Mudroom Motion - Turn on Lights - Night Time
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.motion_sensor_3_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '23:00:10'
    before: 05:29:59
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
    service: light.turn_on
    entity_id: light.laundry_light
    data:
      brightness: 45
- id: Motion Mudroom - Turn off with no motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_3_motion
    to: 'off'
    for: 00:01:00
  action:
  - service: light.turn_off
    entity_id: light.laundry_light
- id: Motion Master Bathroom - Turn on Lights - Daytime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_8_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:00
    before: '21:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.master_bath_toilet
    - light.master_bathroom_shower
    data:
      brightness: 254
- id: Motion Master Bathroom - Turn on Switch - Daytime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_8_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:00
    before: '21:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: switch.turn_on
    entity_id:
    - switch.master_bathroom_fixture
- id: Motion Master Bathroom - Turn on Lights - Nighttime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_8_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '22:00:00'
    before: 06:00:00
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.master_bath_toilet
    - light.master_bathroom_shower
    data:
      brightness: 40
- id: Motion Master Bathroom - Turn off with no motion - Night
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_8_motion
    to: 'off'
    for: 00:01:00
  condition:
  - condition: time
    after: '22:00:00'
    before: 06:00:00
  action:
  - service: light.turn_off
    entity_id:
    - light.master_bath_toilet
    - light.master_bathroom_shower
- id: Motion Master Bathroom - Turn off with no motion - DAY
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_8_motion
    to: 'off'
    for: 00:15:00
  condition:
  - condition: time
    after: 06:00:00
    before: '21:59:59'
  action:
  - service: light.turn_off
    entity_id:
    - light.master_bathroom_shower
    - light.master_bath_toilet
- id: Motion Master Bathroom - Turn off Switch with no motion - DAY
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_8_motion
    to: 'off'
    for: 00:04:00
  condition:
  - condition: time
    after: 06:00:00
    before: '21:59:59'
  action:
  - service: switch.turn_off
    entity_id:
    - switch.master_bathroom_fixture
- id: Motion Master Bedroom - Turn on Lights - Daytime - Normal Day
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_5_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:59:00
    before: '21:59:59'
  - condition: time
    weekday:
    - mon
    - tue
    - wed
    - thu
    - fri
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.jorsside
    - light.cellasside
    - light.master_bedroom_window
    - light.master_bedroom_closet
    data:
      brightness: 254
- id: Motion Master Bedroom - Turn off with no motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_5_motion
    to: 'off'
    for: 00:05:00
  action:
  - service: light.turn_off
    entity_id:
    - light.jorsside
    - light.cellasside
    - light.master_bedroom_window
    - light.master_bedroom_closet
- id: Motion Master Bedroom - Turn on Lights - Daytime - Weekends
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_5_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 09:30:00
    before: '21:59:59'
  - condition: time
    weekday:
    - sat
    - sun
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.jorsside
    - light.cellasside
    - light.master_bedroom_window
    - light.master_bedroom_closet
    data:
      brightness: 254
- id: Motion Guest Bathroom - Turn on Lights - Daytime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:00
    before: '21:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.bathroom
    - light.guestsink
    - light.guestshower
    data:
      brightness: 254
      kelvin: 5000
- id: Motion Guest Bathroom - Turn on Switch - Daytime
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:00
    before: '21:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: homeassistant.turn_on
    entity_id:
    - switch.guest_bathroom_fixture
- id: Motion Guest Bathroom - Turn on Lights - Day Time - Bloom
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:10
    before: '21:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id: light.bathroom
    data:
      brightness: 254
      rgb_color:
      - 255
      - 255
      - 255
- id: Motion Guest Bathroom - Turn on Lights - Late Night Time - Bloom
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '22:00:00'
    before: '23:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.bathroom
    data:
      brightness: 75
      rgb_color:
      - 255
      - 255
      - 255
- id: Motion Guest Bathroom - Turn on Lights - Nighttime - Downlights
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '22:00:00'
    before: 06:00:59
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.guestshower
    - light.guestsink
    data:
      brightness: 40
- id: Motion Guest Bathroom - Turn on Lights - Nighttime - Bloom
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: '22:00:00'
    before: 06:00:00
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id: light.bathroom
    data:
      brightness: 150
      rgb_color:
      - 255
      - 0
      - 0
- id: Motion Guest Bathroom - Turn off switch with no motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'off'
    for: 00:01:30
  action:
  - service: homeassistant.turn_off
    entity_id:
    - switch.guest_bathroom_fixture
- id: Motion Guest Bathroom - Turn off lights with no motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'off'
    for: 00:03:00
  action:
  - service: homeassistant.turn_off
    entity_id:
    - light.bathroom
    - light.guestshower
    - light.guestsink
- id: Motion Guest Bathroom - Turn on colors with no motion
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_4_motion
    to: 'off'
    for: 00:03:02
  condition:
  - condition: time
    after: 06:00:00
    before: '23:59:00'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.bathroom
    data:
      brightness: 254
      effect: random
- id: Anyone_Arrive_HOME_TURNONIMHOME
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.everyone_home
    to: 'True'
  action:
    service: homeassistant.turn_on
    entity_id: group.imhome
- id: JOR_Arrive_Home_Open_Garage
  trigger:
  - platform: state
    entity_id: sensor.jor_home
    to: 'True'
  action:
    service: cover.open_cover
    entity_id: cover.garage_left
- id: JOR_Leave_Home_Close_Garage
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: sensor.jor_home
    to: 'False'
  action:
    service: cover.close_cover
    entity_id: cover.garage_left
- id: Turn on Garage Lights When Opened
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: cover.garage_left
    to: open
  condition:
  - condition: state
    entity_id: switch.garage_lights
    state: 'off'
  action:
  - service: homeassistant.turn_on
    entity_id: switch.garage_lights
- id: Mudroom Door Opens - Turn on Garage Lights
  initial_state: 'on'
  trigger:
    platform: state
    entity_id:
    - binary_sensor.mudroom_door_opened
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: switch.garage_lights
    state: 'off'
  action:
  - service: homeassistant.turn_on
    entity_id:
    - switch.garage_lights
  - delay: 00:15:00
  - service: switch.turn_off
    entity_id:
    - switch.garage_lights
- id: Turn off Garage Lights When No Motion Detected
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_motion_motion
    to: 'off'
    for:
      minutes: '10'
  action:
  - service: switch.turn_off
    entity_id: switch.garage_lights
- id: Close Garage Door When No Motion Detected for 10 minutes
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_motion_motion
    to: 'off'
    for:
      minutes: '10'
  action:
  - service: cover.close_cover
    entity_id: cover.garage_left
- id: Turn on Garage Lights When Motion Detected
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: binary_sensor.garage_motion_motion
    to: 'on'
    from: 'off'
  action:
  - service: homeassistant.turn_on
    entity_id: switch.garage_lights
- id: Unlock when jor get home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.jor_home
    to: 'True'
  action:
    service: lock.unlock
    entity_id: lock.front_door
- id: Unlock when cella get home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.cella_home
    to: 'True'
  action:
    service: lock.unlock
    entity_id: lock.front_door
- id: Lock up when Cella leave
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.cella_home
    to: 'False'
  action:
    service: lock.lock
    entity_id: lock.front_door
- id: Lock up when Jor leave
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.jor_home
    to: 'False'
  action:
    service: lock.lock
    entity_id: lock.front_door
- id: Lights_Out
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.everyone_home
    to: 'False'
  action:
    service: homeassistant.turn_off
    entity_id: group.everything
- id: Office_NoMotion_TurnOffLights_NormalDay
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_7_motion
    to: 'off'
    for: 00:05:00
  action:
    service: light.turn_off
    entity_id: light.cellas_desk
- id: Office_NoMotion_TurnOffSwitch_NormalDay
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.motion_sensor_7_motion
    to: 'off'
    for: 00:05:00
  action:
    service: switch.turn_off
    entity_id: switch.workbench
- id: Motion Office - Turn on Lights Day Time
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_7_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:10
    before: '23:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: light.turn_on
    entity_id:
    - light.cellas_desk
    data:
      brightness: 254
- id: Motion Office - Turn on Switch Day Time
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_7_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 06:00:10
    before: '23:59:59'
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: switch.turn_on
    entity_id:
    - switch.workbench
- id: Motion Office - Turn on Lights Night Time
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.motion_sensor_7_motion
    to: 'on'
    from: 'off'
  condition:
  - condition: time
    after: 00:00:05
    before: 06:00:05
  - condition: state
    entity_id: sensor.everyone_home
    state: 'True'
  action:
  - service: homeassistant.turn_on
    entity_id:
    - light.cellas_desk
    - switch.workbench
    data:
      brightness: 45
- id: Push Travel Time From Jor to Cella
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    minutes: /5
    seconds: '0'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ is_state("input_boolean.push_notification_distance_jor_to_cella",
        "on") }}'
    - condition: numeric_state
      entity_id: sensor.google_travel_time_jor_to_cella
      above: 1
  action:
  - service: notify.notify
    data:
      title: Jordan is {{states.sensor.google_travel_time_jor_to_cella.state}} minutes
        away
      message: Approximate ETA based on current traffic conditions and last known
        location
      data:
        push:
          badge: 1
          category: camera
          entity_id: camera.street_view_jor_gps
- id: Push Travel Time From Cella to Jor
  initial_state: 'on'
  trigger:
  - platform: time_pattern
    minutes: /5
    seconds: '0'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ is_state("input_boolean.push_notification_distance_cella_to_jor",
        "on") }}'
    - condition: numeric_state
      entity_id: sensor.google_travel_time_cella_to_jor
      above: 1
  action:
  - service: notify.notify
    data:
      title: Cella is {{states.sensor.google_travel_time_cella_to_jor.state}} minutes
        away
      message: Approximate ETA based on current traffic conditions and last known
        location
      data:
        push:
          badge: 1
          category: camera
          entity_id: camera.street_view_cella_gps
- id: Jor Has Arrived
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.google_travel_time_jor_to_cella
    below: 2
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ is_state("input_boolean.push_notification_distance_jor_to_cella",
        "on") }}'
  action:
  - service: notify.all_cella
    data:
      title: Jordan has arrived!
      message: Jordan is here.
      data:
        push:
          badge: 1
          category: camera
          entity_id: camera.street_view_jor_gps
  - service: input_boolean.turn_off
    entity_id: input_boolean.push_notification_distance_jor_to_cella
- id: Cella Has Arrived
  initial_state: 'on'
  trigger:
  - platform: numeric_state
    entity_id: sensor.google_travel_time_cella_to_jor
    below: 2
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ is_state("input_boolean.push_notification_distance_cella_to_jor",
        "on") }}'
  action:
  - service: notify.notify
    data:
      title: Cella has arrived
      message: Cella is here.
      data:
        push:
          badge: 1
          category: camera
          entity_id: camera.street_view_cella_gps
  - service: input_boolean.turn_off
    entity_id: input_boolean.push_notification_distance_cella_to_jor
- id: Turn off Bedroom Lights at Night
  initial_state: 'on'
  trigger:
  - platform: state
    entity_id: remote.bedroom_harmony
    to: 'on'
    for: 00:45:00
  action:
  - service: homeassistant.turn_off
    entity_id: group.master_bedroom
- id: '1552068927774'
  alias: Wink Alert
  trigger:
  - entity_id: binary_sensor.wink_hub
    for: 00:00:05
    from: 'on'
    platform: state
    to: 'off'
  condition: []
  action:
  - data:
      message: Wink Hub has been Offline for 5 Minutes
      target:
      - '+16033181236'
    service: notify.sms
- id: '1552069205280'
  alias: Kitchen Echo Alert
  trigger:
  - entity_id: media_player.kitchen_echo
    for: 00:00:05
    from: standby
    platform: state
    to: unavailable
  condition: []
  action:
  - data:
      message: Kitchen Echo has been Offline for 5 Minutes
      target:
      - '+16033181236'
    service: notify.sms
- id: '1553024434541'
  alias: sugar_snacktime_over
  trigger:
  - at: '16:00:00'
    platform: time
  condition:
  - condition: state
    entity_id: sensor.friends_home
    state: 'false'
  action:
  - data:
      entity: media_player.kitchen_echo
      message: Stop fucking stuffing your faces, no more sugar for anyone!
    service: media_player.alexa_tts
